{"version":3,"sources":["webpack:///./node_modules/_vuetify@2.3.4@vuetify/lib/components/VGrid/VRow.js","webpack:///./node_modules/_vuetify@2.3.4@vuetify/lib/components/VTreeview/VTreeviewNode.js","webpack:///./node_modules/_vuetify@2.3.4@vuetify/lib/components/VTreeview/util/filterTreeItems.js","webpack:///./node_modules/_vuetify@2.3.4@vuetify/lib/components/VTreeview/VTreeview.js"],"names":["breakpoints","ALIGNMENT","makeProps","prefix","def","reduce","props","val","alignValidator","str","includes","alignProps","type","String","default","validator","justifyValidator","justifyProps","alignContentValidator","alignContentProps","propMap","align","Object","keys","justify","alignContent","classMap","breakpointClass","prop","className","breakpoint","replace","toLowerCase","cache","Map","extend","name","functional","tag","dense","Boolean","noGutters","h","data","children","cacheKey","classList","get","forEach","value","push","set","staticClass","class","baseMixins","mixins","VTreeviewNodeProps","activatable","activeClass","color","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","Function","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","shaped","transition","selectionType","v","VTreeviewNode","inject","treeview","level","Number","item","parentIsDisabled","hasLoaded","isActive","isIndeterminate","isLoading","isOpen","isSelected","computed","this","leaf","selected","indeterminate","active","open","length","register","unregister","methods","Promise","resolve","then","updateOpen","key","emitOpen","$scopedSlots","label","scopedProps","text","$createElement","slot","prepend","append","genPrependSlot","genLabel","genAppendSlot","VIcon","on","click","e","stopPropagation","checkChildren","undefined","disabled","$nextTick","updateSelected","emitSelected","computedIcon","map","genContent","unshift","genCheckbox","hasChildren","genToggle","genLevel","setTextColor","updateActive","emitActive","scopedSlots","c","genChild","genChildrenWrapper","genNode","genTransition","isExcluded","attrs","filterTreeItem","search","textKey","toLocaleLowerCase","indexOf","filterTreeItems","filter","idKey","childrenKey","excluded","match","i","add","Array","hoverable","items","multipleActive","openAll","returnObject","activeCache","Set","nodes","openCache","selectedCache","watch","oldKeys","k","newKeys","getKeys","diff","oldSelectedCache","buildTree","deep","handleNodeCacheWatcher","getValue","$slots","console","updateAll","parent","oldNode","hasOwnProperty","vnode","node","calculateState","updateVnodeState","state","counts","child","emitNodeCache","event","$emit","updateFn","emitFn","old","descendants","getDescendants","parents","delete","isForced","changed","descendant","calculated","getParents","entries","isParent","excludedItems","has","options","bind","themeClasses"],"mappings":"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","file":"js/chunk-558d08ed.553548fb.js","sourcesContent":["import \"../../../src/components/VGrid/VGrid.sass\";\nimport Vue from 'vue';\nimport mergeData from '../../util/mergeData';\nimport { upperFirst } from '../../util/helpers'; // no xs\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl'];\nconst ALIGNMENT = ['start', 'end', 'center'];\n\nfunction makeProps(prefix, def) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + upperFirst(val)] = def();\n    return props;\n  }, {});\n}\n\nconst alignValidator = str => [...ALIGNMENT, 'baseline', 'stretch'].includes(str);\n\nconst alignProps = makeProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator\n}));\n\nconst justifyValidator = str => [...ALIGNMENT, 'space-between', 'space-around'].includes(str);\n\nconst justifyProps = makeProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator\n}));\n\nconst alignContentValidator = str => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str);\n\nconst alignContentProps = makeProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator\n}));\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps)\n};\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content'\n};\n\nfunction breakpointClass(type, prop, val) {\n  let className = classMap[type];\n\n  if (val == null) {\n    return undefined;\n  }\n\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '');\n    className += `-${breakpoint}`;\n  } // .align-items-sm-center\n\n\n  className += `-${val}`;\n  return className.toLowerCase();\n}\n\nconst cache = new Map();\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator\n    },\n    ...alignContentProps\n  },\n\n  render(h, {\n    props,\n    data,\n    children\n  }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = '';\n\n    for (const prop in props) {\n      cacheKey += String(props[prop]);\n    }\n\n    let classList = cache.get(cacheKey);\n\n    if (!classList) {\n      classList = []; // Loop through `align`, `justify`, `alignContent` breakpoint props\n\n      let type;\n\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value = props[prop];\n          const className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n\n      classList.push({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent\n      });\n      cache.set(cacheKey, classList);\n    }\n\n    return h(props.tag, mergeData(data, {\n      staticClass: 'row',\n      class: classList\n    }), children);\n  }\n\n});\n//# sourceMappingURL=VRow.js.map","// Components\nimport { VExpandTransition } from '../transitions';\nimport { VIcon } from '../VIcon'; // Mixins\n\nimport { inject as RegistrableInject } from '../../mixins/registrable';\nimport Colorable from '../../mixins/colorable'; // Utils\n\nimport mixins from '../../util/mixins';\nimport { getObjectValueByPath, createRange } from '../../util/helpers';\nconst baseMixins = mixins(Colorable, RegistrableInject('treeview'));\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active'\n  },\n  color: {\n    type: String,\n    default: 'primary'\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup'\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate'\n  },\n  itemChildren: {\n    type: String,\n    default: 'children'\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled'\n  },\n  itemKey: {\n    type: String,\n    default: 'id'\n  },\n  itemText: {\n    type: String,\n    default: 'name'\n  },\n  loadChildren: Function,\n  loadingIcon: {\n    type: String,\n    default: '$loading'\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff'\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn'\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent'\n  },\n  shaped: Boolean,\n  transition: Boolean,\n  selectionType: {\n    type: String,\n    default: 'leaf',\n    validator: v => ['leaf', 'independent'].includes(v)\n  }\n};\n/* @vue/component */\n\nconst VTreeviewNode = baseMixins.extend().extend({\n  name: 'v-treeview-node',\n  inject: {\n    treeview: {\n      default: null\n    }\n  },\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null\n    },\n    parentIsDisabled: Boolean,\n    ...VTreeviewNodeProps\n  },\n  data: () => ({\n    hasLoaded: false,\n    isActive: false,\n    isIndeterminate: false,\n    isLoading: false,\n    isOpen: false,\n    isSelected: false\n  }),\n  computed: {\n    disabled() {\n      return getObjectValueByPath(this.item, this.itemDisabled) || this.parentIsDisabled && this.selectionType === 'leaf';\n    },\n\n    key() {\n      return getObjectValueByPath(this.item, this.itemKey);\n    },\n\n    children() {\n      return getObjectValueByPath(this.item, this.itemChildren);\n    },\n\n    text() {\n      return getObjectValueByPath(this.item, this.itemText);\n    },\n\n    scopedProps() {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen\n      };\n    },\n\n    computedIcon() {\n      if (this.isIndeterminate) return this.indeterminateIcon;else if (this.isSelected) return this.onIcon;else return this.offIcon;\n    },\n\n    hasChildren() {\n      return !!this.children && (!!this.children.length || !!this.loadChildren);\n    }\n\n  },\n\n  created() {\n    this.treeview.register(this);\n  },\n\n  beforeDestroy() {\n    this.treeview.unregister(this);\n  },\n\n  methods: {\n    checkChildren() {\n      return new Promise(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve();\n        this.isLoading = true;\n        resolve(this.loadChildren(this.item));\n      }).then(() => {\n        this.isLoading = false;\n        this.hasLoaded = true;\n      });\n    },\n\n    open() {\n      this.isOpen = !this.isOpen;\n      this.treeview.updateOpen(this.key, this.isOpen);\n      this.treeview.emitOpen();\n    },\n\n    genLabel() {\n      const children = [];\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps));else children.push(this.text);\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label'\n      }, children);\n    },\n\n    genPrependSlot() {\n      if (!this.$scopedSlots.prepend) return null;\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend'\n      }, this.$scopedSlots.prepend(this.scopedProps));\n    },\n\n    genAppendSlot() {\n      if (!this.$scopedSlots.append) return null;\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append'\n      }, this.$scopedSlots.append(this.scopedProps));\n    },\n\n    genContent() {\n      const children = [this.genPrependSlot(), this.genLabel(), this.genAppendSlot()];\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content'\n      }, children);\n    },\n\n    genToggle() {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading\n        },\n        slot: 'prepend',\n        on: {\n          click: e => {\n            e.stopPropagation();\n            if (this.isLoading) return;\n            this.checkChildren().then(() => this.open());\n          }\n        }\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon]);\n    },\n\n    genCheckbox() {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected || this.isIndeterminate ? this.selectedColor : undefined,\n          disabled: this.disabled\n        },\n        on: {\n          click: e => {\n            e.stopPropagation();\n            if (this.isLoading) return;\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected;\n                this.isIndeterminate = false;\n                this.treeview.updateSelected(this.key, this.isSelected);\n                this.treeview.emitSelected();\n              });\n            });\n          }\n        }\n      }, [this.computedIcon]);\n    },\n\n    genLevel(level) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level'\n      }));\n    },\n\n    genNode() {\n      const children = [this.genContent()];\n      if (this.selectable) children.unshift(this.genCheckbox());\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle());\n      } else {\n        children.unshift(...this.genLevel(1));\n      }\n\n      children.unshift(...this.genLevel(this.level));\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive\n        },\n        on: {\n          click: () => {\n            if (this.openOnClick && this.hasChildren) {\n              this.checkChildren().then(this.open);\n            } else if (this.activatable && !this.disabled) {\n              this.isActive = !this.isActive;\n              this.treeview.updateActive(this.key, this.isActive);\n              this.treeview.emitActive();\n            }\n          }\n        }\n      }), children);\n    },\n\n    genChild(item, parentIsDisabled) {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n          selectionType: this.selectionType,\n          parentIsDisabled\n        },\n        scopedSlots: this.$scopedSlots\n      });\n    },\n\n    genChildrenWrapper() {\n      if (!this.isOpen || !this.children) return null;\n      const children = [this.children.map(c => this.genChild(c, this.disabled))];\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children'\n      }, children);\n    },\n\n    genTransition() {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()]);\n    }\n\n  },\n\n  render(h) {\n    const children = [this.genNode()];\n    if (this.transition) children.push(this.genTransition());else children.push(this.genChildrenWrapper());\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n        'v-treeview-node--excluded': this.treeview.isExcluded(this.key)\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen)\n      }\n    }, children);\n  }\n\n});\nexport default VTreeviewNode;\n//# sourceMappingURL=VTreeviewNode.js.map","import { getObjectValueByPath } from '../../../util/helpers';\nexport function filterTreeItem(item, search, textKey) {\n  const text = getObjectValueByPath(item, textKey);\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1;\n}\nexport function filterTreeItems(filter, item, search, idKey, textKey, childrenKey, excluded) {\n  if (filter(item, search, textKey)) {\n    return true;\n  }\n\n  const children = getObjectValueByPath(item, childrenKey);\n\n  if (children) {\n    let match = false;\n\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true;\n      }\n    }\n\n    if (match) return true;\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey));\n  return false;\n}\n//# sourceMappingURL=filterTreeItems.js.map","// Styles\nimport \"../../../src/components/VTreeview/VTreeview.sass\"; // Components\n\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'; // Mixins\n\nimport Themeable from '../../mixins/themeable';\nimport { provide as RegistrableProvide } from '../../mixins/registrable'; // Utils\n\nimport { arrayDiff, deepEqual, getObjectValueByPath } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nimport { consoleWarn } from '../../util/console';\nimport { filterTreeItems, filterTreeItem } from './util/filterTreeItems';\nexport default mixins(RegistrableProvide('treeview'), Themeable\n/* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide() {\n    return {\n      treeview: this\n    };\n  },\n\n  props: {\n    active: {\n      type: Array,\n      default: () => []\n    },\n    dense: Boolean,\n    filter: Function,\n    hoverable: Boolean,\n    items: {\n      type: Array,\n      default: () => []\n    },\n    multipleActive: Boolean,\n    open: {\n      type: Array,\n      default: () => []\n    },\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false\n    },\n    search: String,\n    value: {\n      type: Array,\n      default: () => []\n    },\n    ...VTreeviewNodeProps\n  },\n  data: () => ({\n    level: -1,\n    activeCache: new Set(),\n    nodes: {},\n    openCache: new Set(),\n    selectedCache: new Set()\n  }),\n  computed: {\n    excludedItems() {\n      const excluded = new Set();\n      if (!this.search) return excluded;\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(this.filter || filterTreeItem, this.items[i], this.search, this.itemKey, this.itemText, this.itemChildren, excluded);\n      }\n\n      return excluded;\n    }\n\n  },\n  watch: {\n    items: {\n      handler() {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey));\n        const newKeys = this.getKeys(this.items);\n        const diff = arrayDiff(newKeys, oldKeys); // We only want to do stuff if items have changed\n\n        if (!diff.length && newKeys.length < oldKeys.length) return; // If nodes are removed we need to clear them from this.nodes\n\n        diff.forEach(k => delete this.nodes[k]);\n        const oldSelectedCache = [...this.selectedCache];\n        this.selectedCache = new Set();\n        this.activeCache = new Set();\n        this.openCache = new Set();\n        this.buildTree(this.items); // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected();\n      },\n\n      deep: true\n    },\n\n    active(value) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive);\n    },\n\n    value(value) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected);\n    },\n\n    open(value) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen);\n    }\n\n  },\n\n  created() {\n    const getValue = key => this.returnObject ? getObjectValueByPath(key, this.itemKey) : key;\n\n    this.buildTree(this.items);\n\n    for (const value of this.value.map(getValue)) {\n      this.updateSelected(value, true, true);\n    }\n\n    for (const active of this.active.map(getValue)) {\n      this.updateActive(active, true);\n    }\n  },\n\n  mounted() {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this);\n    }\n\n    if (this.openAll) {\n      this.updateAll(true);\n    } else {\n      this.open.forEach(key => this.updateOpen(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true));\n      this.emitOpen();\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll(value) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value));\n      this.emitOpen();\n    },\n\n    getKeys(items, keys = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey);\n        keys.push(key);\n        const children = getObjectValueByPath(items[i], this.itemChildren);\n\n        if (children) {\n          keys.push(...this.getKeys(children));\n        }\n      }\n\n      return keys;\n    },\n\n    buildTree(items, parent = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        const key = getObjectValueByPath(item, this.itemKey);\n        const children = getObjectValueByPath(item, this.itemChildren, []);\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false,\n          isIndeterminate: false,\n          isActive: false,\n          isOpen: false,\n          vnode: null\n        };\n        const node = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map(c => getObjectValueByPath(c, this.itemKey)),\n          item\n        };\n        this.buildTree(children, key); // This fixed bug with dynamic children resetting selected parent state\n\n        if (!this.nodes.hasOwnProperty(key) && parent !== null && this.nodes.hasOwnProperty(parent)) {\n          node.isSelected = this.nodes[parent].isSelected;\n        } else {\n          node.isSelected = oldNode.isSelected;\n          node.isIndeterminate = oldNode.isIndeterminate;\n        }\n\n        node.isActive = oldNode.isActive;\n        node.isOpen = oldNode.isOpen;\n        this.nodes[key] = node;\n\n        if (children.length) {\n          const {\n            isSelected,\n            isIndeterminate\n          } = this.calculateState(key, this.nodes);\n          node.isSelected = isSelected;\n          node.isIndeterminate = isIndeterminate;\n        } // Don't forget to rebuild cache\n\n\n        if (this.nodes[key].isSelected && (this.selectionType === 'independent' || node.children.length === 0)) this.selectedCache.add(key);\n        if (this.nodes[key].isActive) this.activeCache.add(key);\n        if (this.nodes[key].isOpen) this.openCache.add(key);\n        this.updateVnodeState(key);\n      }\n    },\n\n    calculateState(node, state) {\n      const children = state[node].children;\n      const counts = children.reduce((counts, child) => {\n        counts[0] += +Boolean(state[child].isSelected);\n        counts[1] += +Boolean(state[child].isIndeterminate);\n        return counts;\n      }, [0, 0]);\n      const isSelected = !!children.length && counts[0] === children.length;\n      const isIndeterminate = !isSelected && (counts[0] > 0 || counts[1] > 0);\n      return {\n        isSelected,\n        isIndeterminate\n      };\n    },\n\n    emitOpen() {\n      this.emitNodeCache('update:open', this.openCache);\n    },\n\n    emitSelected() {\n      this.emitNodeCache('input', this.selectedCache);\n    },\n\n    emitActive() {\n      this.emitNodeCache('update:active', this.activeCache);\n    },\n\n    emitNodeCache(event, cache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache]);\n    },\n\n    handleNodeCacheWatcher(value, cache, updateFn, emitFn) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value;\n      const old = [...cache];\n      if (deepEqual(old, value)) return;\n      old.forEach(key => updateFn(key, false));\n      value.forEach(key => updateFn(key, true));\n      emitFn();\n    },\n\n    getDescendants(key, descendants = []) {\n      const children = this.nodes[key].children;\n      descendants.push(...children);\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants);\n      }\n\n      return descendants;\n    },\n\n    getParents(key) {\n      let parent = this.nodes[key].parent;\n      const parents = [];\n\n      while (parent !== null) {\n        parents.push(parent);\n        parent = this.nodes[parent].parent;\n      }\n\n      return parents;\n    },\n\n    register(node) {\n      const key = getObjectValueByPath(node.item, this.itemKey);\n      this.nodes[key].vnode = node;\n      this.updateVnodeState(key);\n    },\n\n    unregister(node) {\n      const key = getObjectValueByPath(node.item, this.itemKey);\n      if (this.nodes[key]) this.nodes[key].vnode = null;\n    },\n\n    isParent(key) {\n      return this.nodes[key].children && this.nodes[key].children.length;\n    },\n\n    updateActive(key, isActive) {\n      if (!this.nodes.hasOwnProperty(key)) return;\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false;\n          this.updateVnodeState(active);\n          this.activeCache.delete(active);\n        });\n      }\n\n      const node = this.nodes[key];\n      if (!node) return;\n      if (isActive) this.activeCache.add(key);else this.activeCache.delete(key);\n      node.isActive = isActive;\n      this.updateVnodeState(key);\n    },\n\n    updateSelected(key, isSelected, isForced = false) {\n      if (!this.nodes.hasOwnProperty(key)) return;\n      const changed = new Map();\n\n      if (this.selectionType !== 'independent') {\n        for (const descendant of this.getDescendants(key)) {\n          if (!getObjectValueByPath(this.nodes[descendant].item, this.itemDisabled) || isForced) {\n            this.nodes[descendant].isSelected = isSelected;\n            this.nodes[descendant].isIndeterminate = false;\n            changed.set(descendant, isSelected);\n          }\n        }\n\n        const calculated = this.calculateState(key, this.nodes);\n        this.nodes[key].isSelected = isSelected;\n        this.nodes[key].isIndeterminate = calculated.isIndeterminate;\n        changed.set(key, isSelected);\n\n        for (const parent of this.getParents(key)) {\n          const calculated = this.calculateState(parent, this.nodes);\n          this.nodes[parent].isSelected = calculated.isSelected;\n          this.nodes[parent].isIndeterminate = calculated.isIndeterminate;\n          changed.set(parent, calculated.isSelected);\n        }\n      } else {\n        this.nodes[key].isSelected = isSelected;\n        this.nodes[key].isIndeterminate = false;\n        changed.set(key, isSelected);\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key);\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue;\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key);\n      }\n    },\n\n    updateOpen(key, isOpen) {\n      if (!this.nodes.hasOwnProperty(key)) return;\n      const node = this.nodes[key];\n      const children = getObjectValueByPath(node.item, this.itemChildren);\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen));\n      } else if (children && children.length) {\n        node.isOpen = isOpen;\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key);\n        this.updateVnodeState(key);\n      }\n    },\n\n    updateVnodeState(key) {\n      const node = this.nodes[key];\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected;\n        node.vnode.isIndeterminate = node.isIndeterminate;\n        node.vnode.isActive = node.isActive;\n        node.vnode.isOpen = node.isOpen;\n      }\n    },\n\n    isExcluded(key) {\n      return !!this.search && this.excludedItems.has(key);\n    }\n\n  },\n\n  render(h) {\n    const children = this.items.length ? this.items.map(item => {\n      const genChild = VTreeviewNode.options.methods.genChild.bind(this);\n      return genChild(item, getObjectValueByPath(item, this.itemDisabled));\n    })\n    /* istanbul ignore next */\n    : this.$slots.default; // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses\n      }\n    }, children);\n  }\n\n});\n//# sourceMappingURL=VTreeview.js.map"],"sourceRoot":""}